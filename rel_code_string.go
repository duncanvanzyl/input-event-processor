// Code generated by "stringer -type=REL_CODE"; DO NOT EDIT.

package input

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[REL_X-0]
	_ = x[REL_Y-1]
	_ = x[REL_Z-2]
	_ = x[REL_RX-3]
	_ = x[REL_RY-4]
	_ = x[REL_RZ-5]
	_ = x[REL_HWHEEL-6]
	_ = x[REL_DIAL-7]
	_ = x[REL_WHEEL-8]
	_ = x[REL_MISC-9]
	_ = x[REL_RESERVED-10]
	_ = x[REL_WHEEL_HI_RES-11]
	_ = x[REL_HWHEEL_HI_RES-12]
	_ = x[REL_MAX-15]
	_ = x[REL_CNT-16]
}

const (
	_REL_CODE_name_0 = "REL_XREL_YREL_ZREL_RXREL_RYREL_RZREL_HWHEELREL_DIALREL_WHEELREL_MISCREL_RESERVEDREL_WHEEL_HI_RESREL_HWHEEL_HI_RES"
	_REL_CODE_name_1 = "REL_MAXREL_CNT"
)

var (
	_REL_CODE_index_0 = [...]uint8{0, 5, 10, 15, 21, 27, 33, 43, 51, 60, 68, 80, 96, 113}
	_REL_CODE_index_1 = [...]uint8{0, 7, 14}
)

func (i REL_CODE) String() string {
	switch {
	case i <= 12:
		return _REL_CODE_name_0[_REL_CODE_index_0[i]:_REL_CODE_index_0[i+1]]
	case 15 <= i && i <= 16:
		i -= 15
		return _REL_CODE_name_1[_REL_CODE_index_1[i]:_REL_CODE_index_1[i+1]]
	default:
		return "REL_CODE(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
