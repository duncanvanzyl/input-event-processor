// Code generated by "stringer -type=EV"; DO NOT EDIT.

package input

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EV_SYN-0]
	_ = x[EV_KEY-1]
	_ = x[EV_REL-2]
	_ = x[EV_ABS-3]
	_ = x[EV_MSC-4]
	_ = x[EV_SW-5]
	_ = x[EV_LED-17]
	_ = x[EV_SND-18]
	_ = x[EV_REP-20]
	_ = x[EV_FF-21]
	_ = x[EV_PWR-22]
	_ = x[EV_FF_STATUS-23]
	_ = x[EV_MAX-31]
	_ = x[EV_CNT-32]
}

const (
	_EV_name_0 = "EV_SYNEV_KEYEV_RELEV_ABSEV_MSCEV_SW"
	_EV_name_1 = "EV_LEDEV_SND"
	_EV_name_2 = "EV_REPEV_FFEV_PWREV_FF_STATUS"
	_EV_name_3 = "EV_MAXEV_CNT"
)

var (
	_EV_index_0 = [...]uint8{0, 6, 12, 18, 24, 30, 35}
	_EV_index_1 = [...]uint8{0, 6, 12}
	_EV_index_2 = [...]uint8{0, 6, 11, 17, 29}
	_EV_index_3 = [...]uint8{0, 6, 12}
)

func (i EV) String() string {
	switch {
	case i <= 5:
		return _EV_name_0[_EV_index_0[i]:_EV_index_0[i+1]]
	case 17 <= i && i <= 18:
		i -= 17
		return _EV_name_1[_EV_index_1[i]:_EV_index_1[i+1]]
	case 20 <= i && i <= 23:
		i -= 20
		return _EV_name_2[_EV_index_2[i]:_EV_index_2[i+1]]
	case 31 <= i && i <= 32:
		i -= 31
		return _EV_name_3[_EV_index_3[i]:_EV_index_3[i+1]]
	default:
		return "EV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
